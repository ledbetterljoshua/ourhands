var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import gql from "graphql-tag";
export var registerMutation = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  mutation RegisterMutation($email: String!) {\n    register(email: $email) {\n      path\n      message\n    }\n  }\n"], ["\n  mutation RegisterMutation($email: String!) {\n    register(email: $email) {\n      path\n      message\n    }\n  }\n"])));
export var logoutMutation = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  mutation LogoutMutation {\n    logout\n  }\n"], ["\n  mutation LogoutMutation {\n    logout\n  }\n"])));
export var myPosts = gql(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  query MyPosts {\n    me {\n      id\n      posts {\n        id\n        title\n        details\n        createdAt\n        upvoteCount\n        commentCount\n        upvoted\n      }\n    }\n  }\n"], ["\n  query MyPosts {\n    me {\n      id\n      posts {\n        id\n        title\n        details\n        createdAt\n        upvoteCount\n        commentCount\n        upvoted\n      }\n    }\n  }\n"])));
export var meQuery = gql(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  query MeQuery {\n    me {\n      id\n      email\n      domain {\n        id\n        name\n        rooms {\n          isOwner\n          owner {\n            email\n          }\n          title\n          id\n        }\n      }\n    }\n  }\n"], ["\n  query MeQuery {\n    me {\n      id\n      email\n      domain {\n        id\n        name\n        rooms {\n          isOwner\n          owner {\n            email\n          }\n          title\n          id\n        }\n      }\n    }\n  }\n"])));
export var postsQuery = gql(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  query PostsQuery($range: String) {\n    findPosts(range: $range) {\n      id\n      title\n      details\n      createdAt\n      upvoteCount\n      commentCount\n      upvoted\n      owner {\n        id\n        email\n      }\n    }\n  }\n"], ["\n  query PostsQuery($range: String) {\n    findPosts(range: $range) {\n      id\n      title\n      details\n      createdAt\n      upvoteCount\n      commentCount\n      upvoted\n      owner {\n        id\n        email\n      }\n    }\n  }\n"])));
export var commentsQuery = gql(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  query CommentsQuery($postId: ID!) {\n    findComments(postId: $postId) {\n      id\n      text\n      parentId\n      createdAt\n      replies {\n        id\n        text\n        parentId\n        createdAt\n      }\n    }\n  }\n"], ["\n  query CommentsQuery($postId: ID!) {\n    findComments(postId: $postId) {\n      id\n      text\n      parentId\n      createdAt\n      replies {\n        id\n        text\n        parentId\n        createdAt\n      }\n    }\n  }\n"])));
export var createPostMutation = gql(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  mutation CreatePostMutation(\n    $title: String!\n    $details: String\n    $viewability: String\n  ) {\n    createPost(\n      input: { title: $title, details: $details, viewability: $viewability }\n    ) {\n      path\n      message\n      post {\n        id\n      }\n    }\n  }\n"], ["\n  mutation CreatePostMutation(\n    $title: String!\n    $details: String\n    $viewability: String\n  ) {\n    createPost(\n      input: { title: $title, details: $details, viewability: $viewability }\n    ) {\n      path\n      message\n      post {\n        id\n      }\n    }\n  }\n"])));
export var createCommentMutation = gql(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  mutation CreateCommentMutation($text: String!, $parentId: ID, $postId: ID) {\n    createComment(\n      input: { text: $text, parentId: $parentId, postId: $postId }\n    ) {\n      path\n      message\n      comment {\n        parentId\n        text\n        id\n      }\n    }\n  }\n"], ["\n  mutation CreateCommentMutation($text: String!, $parentId: ID, $postId: ID) {\n    createComment(\n      input: { text: $text, parentId: $parentId, postId: $postId }\n    ) {\n      path\n      message\n      comment {\n        parentId\n        text\n        id\n      }\n    }\n  }\n"])));
export var upvoteMutation = gql(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  mutation UpvoteMutation($id: ID!) {\n    upvotePost(id: $id) {\n      id\n      upvoteCount\n      upvoted\n    }\n  }\n"], ["\n  mutation UpvoteMutation($id: ID!) {\n    upvotePost(id: $id) {\n      id\n      upvoteCount\n      upvoted\n    }\n  }\n"])));
export var deletePostMutation = gql(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n  mutation DeletePostMutation($id: ID!) {\n    deletePost(id: $id) {\n      path\n      message\n    }\n  }\n"], ["\n  mutation DeletePostMutation($id: ID!) {\n    deletePost(id: $id) {\n      path\n      message\n    }\n  }\n"])));
export var deleteCommentMutation = gql(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n  mutation DeleteCommentMutation($id: ID!, $isReply: Boolean) {\n    deleteComment(id: $id, isReply: $isReply) {\n      path\n      message\n    }\n  }\n"], ["\n  mutation DeleteCommentMutation($id: ID!, $isReply: Boolean) {\n    deleteComment(id: $id, isReply: $isReply) {\n      path\n      message\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;
//# sourceMappingURL=index.js.map